---
title: "lab07_report_group06"
author: "Group 06: Laura Casanovas (s222798), Víctor Fiérrez (s223196), Javier Lopez (s223237), Marina Sangés (s223690), Pablo Sánchez-Izquierdo (s222803)"
format:
  html:
    embed-resources: true
editor: visual
---

## Load libraries

```{r}
library(tidyverse)
library(broom)  # devtools::install_github("tidymodels/broom")
```

## Load data

```{r}
raw_dir <- "data/_raw/"
data_file <- "gravier.RData"
data_loc <- "https://github.com/ramhiser/datamicroarray/raw/master/data/"

if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}
load(file = str_c(raw_dir, data_file))
```

```{r}
gravier_clean <- gravier |>
  bind_cols() |>
  as_tibble()
```

```{r}
# Set the file path and name
file_path <- "data/02_gravier_clean.tsv.gz"

# Write the data to a gzipped tab-separated-values file
write.table(gravier_clean, file = file_path, sep = "\t", quote = FALSE, row.names = FALSE)

# Verify that the file was created
if (file.exists(file_path)) {
  cat("File '02_gravier_clean.tsv.gz' has been created in the 'data' folder.\n")
} else {
  cat("Failed to create the file.\n")
}
```

```{r}
gravier_clean_aug <- gravier_clean |>
  mutate(y = case_when(y == "poor" ~ 1,
                       y == "good" ~ 0)) |> 
  relocate(early_metastasis = y)
```

```{r}
# Set the file path and name
file_path_augmented <- "data/03_gravier_clean_aug.tsv.gz"

# Write the augmented data to a gzipped tab-separated-values file
write.table(gravier_clean_aug, file = file_path_augmented, sep = "\t", quote = FALSE, row.names = FALSE)

# Verify that the file was created
if (file.exists(file_path_augmented)) {
  cat("File '03_gravier_clean_aug.tsv.gz' has been created in the 'data' folder.\n")
} else {
  cat("Failed to create the file.\n")
}

```

```{r}
pca_fit <- gravier_clean_aug %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data
```

```{r}
pca_fit <- gravier_clean_aug %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  scale() %>% # scale data
  prcomp() # do PCA
```

```{r}
pca_fit %>%
  augment(gravier_clean_aug) %>% # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = early_metastasis)) + 
  geom_point(size = 1.5)
```

```{r}
# extract rotation matrix
pca_fit %>%
  tidy(matrix = "rotation")
```

```{r}
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit %>%
  tidy(matrix = "rotation") %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") %>%
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal()
```

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues")
```

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal()
```
